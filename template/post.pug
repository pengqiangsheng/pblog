extends includes/layout.pug

block header
  .lg-bg#bg
    .overlay
      .page-title
        h2 #{title}
      .nav
        a(href="/") 首页
        a(href="/") 标签
        a(href="/") 分类
        a(href="/") 关于

block content
  .page
    .markdown-body !{markdown}
      .link-wrapper
        a(href= `./${link.prev}.html`) 上一篇: #{link.prev}
        a(href= `./${link.next}.html`) 下一篇: #{link.next}
    .sidebar
      .catalogue
        .title 目录

block styles
  style.
    .lg-bg {
      position: relative;
      height: 450px;
      width: 100%;
      top: 0;
      left: 0;
      bottom: 0;
      z-index: 3;
      color: #fff;
    }
    .lg-bg > .overlay {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      z-index: 1;
      //- background: rgb(244, 244, 245);
    }
    .lg-bg .page-title {
      position: relative;
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
      text-align: center;
    }
    .page-title > h2 {
      font-size: 52px;
      font-weight: 300;
    }
    .nav {
      position: absolute;
      bottom: 60px;
      width: 100%;
      text-align: center;
    }
    .nav > a {
      padding: 10px;
      color: #fff;
      //- color: #24292e;
      font-weight: 300;
      font-size: 1.5em;
      text-decoration: none;
    }
    .page {
      position: relative;
      padding-left: 280px;
    }
    .markdown-body {
      box-sizing: border-box;
      min-width: 200px;
      max-width: 980px;
      margin: 0 auto;
      padding: 45px;
    }
    .link-wrapper {
      display: flex;
      justify-content: space-between;
      padding-top: 16px;
      box-sizing: border-box;
      border-top: 1px solid #eaecef;
    }
    .sidebar {
      position: absolute;
      padding: 50px 40px;
      top: 0;
      left: 0;
      height: 100%;
      overflow-x: hidden;
      overflow-y: auto;
      box-sizing: border-box;
      border-right: 1px solid #eaecef;
    }
    .catalogue {
      position: relative;
    }
    .catalogue > .title {
      color: #111;
      font-size: 1.5em;
      font-weight: 600;
      margin-bottom: 10px;
    }
    .catalogue > ul > li{
      width: 200px;
      padding: 10px;
      box-sizing: border-box;
      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;
    }
    .catalogue > ul > li > a {
      color: #24292e;
      text-decoration: none;
    }
    .catalogue .high-light-doc {
      color: #0366d6;
    }
    .high-light-doc a{
      color: #0366d6!important;
    }

block scripts
  script.
    const debounce = (fn, delay = 16.7) => {
      let timer = null
      return (...args) => {
        if(timer) clearTimeout(timer)
        timer = setTimeout(() => {
          clearTimeout(timer)
          timer = null
          fn.apply(this, args)
        }, delay)
      }
    }
    (function() {
      const bgHeight = 450
      const sidebar = document.querySelector('.sidebar')
      const md = document.querySelector('.markdown-body')
      const ids = [].slice.call(md.children)
                    .filter(item => item.id)
      const catalogue = document.querySelector('.catalogue')
      const ul = document.createElement('ul')
      ids.forEach(({id}, index) => {
        const li = document.createElement('li')
        li.innerHTML = `<a href='#${id}'>${id}</a>`
        ul.appendChild(li)
      })
      catalogue.appendChild(ul)

      // 可视区高度
      const clientHeight = document.documentElement.clientHeight
      // 元素离浏览器的高度集合
      const idsOffsetTop = ids.map(item => item.offsetTop)
      console.log(idsOffsetTop)
      console.log(clientHeight)
      const scrollFn = debounce(() => {
        const scrollTop = document.documentElement.scrollTop || document.body.scrollTop
        console.log(scrollTop)
        console.log(idsOffsetTop)
        if(scrollTop >= bgHeight) {
          sidebar.style.position = 'fixed'
        }else {
          sidebar.style.position = 'absolute'
        }
        let index = 0;
        // 高亮当前元素
        for(let i = idsOffsetTop.length - 1; i >= 0; i--) {
          const offsetTop = idsOffsetTop[i]
          if(offsetTop + bgHeight <= scrollTop) {
            console.log('元素', i, '出现在视野里')
            index = i
            break
          }
        }
        for(let i = ul.children.length - 1; i >= 0; i--) {
          const curLi = ul.children[i]
          curLi.className = ''
        }
        const curLi = ul.children[index]
        curLi.classList.add('high-light-doc')
      })
      //- ul.addEventListener('click', function(e) {
      //-   setTimeout(() => {
      //-     for(let i = ul.children.length - 1; i >= 0; i--) {
      //-       const curLi = ul.children[i]
      //-       curLi.className = ''
      //-     }
      //-     e.target.classList.add('high-light-doc')
      //-   }, 100)
      //- })
      window.onscroll = scrollFn
    })()
